****************************************************************************************
 재정부
****************************************************************************************
[마감처리]
  1. 매월 n일 월마감처리되며, 월마감 후에는 해당 기간에 전표, 헌금내역을 등록, 수정, 삭제할 수 없음
  2. 월마감은 회기마감이 되기 전까지 마감과 진행상태를 임의로 변경이 가능
  3. 년마감은 한번 수정되면 변경 불가
  
[관련조직코드]
R10-D05-0-0-0-0     : 총회재정부
R10-XXX-D05-0-0-0   : 지파재정부
R10-XXX-XXX-D05-0-0 : 교회재정부

R10-T01-C0007-D05-0-0 : 안산교회 재정부    

[계좌관리]
- 자기 조직의 계좌는 자기 조직만 관리할 수 있다.
- 총회/지파등에서 관리하는  가상계좌의 경우는 어떻게?
- 가상계좌는 소유부서를 지정할 수 있다.
   ----> 전표등록시 <현금/일반예금/정기예적금> 중에서 선택하는 것에 따라서 계좌가 다른것이 동적로딩된다.  (30.01.05)


[24부서별 고정코드]
총무부 : D01
행정서무부 : D02

재정부 : D05



****************************************************************************************
 전도부
****************************************************************************************
[전도그룹]
- 그룹원 등록, 수정, 삭제는 그룹등록자만 가능
    등록대상은 그 소속 하위의 멤버들에 대해서만 가능

   예) 총회전도부 : 전체멤버
          요한지파전도부 : 요한지파 하위의 모든 성도
          과천교회전도부 : 요한지파 과천교회 소속의 모든 성도
          과천교회장년회전도부 : 요한지파 과천교회 장년회 소속의 모든 성도

                   
****************************************************************************************
 신학부
****************************************************************************************
 
 
****************************************************************************************
 봉사교통부
****************************************************************************************




****************************************************************************************
외부리포트 연동을 위한 설정
****************************************************************************************
[Controller]

    @Resource(name="authService")
    private authService _authService;

    private int _reportCount = 0;
    private Document _xmlDoc = null;


    public void setSess(HttpSession session, String sid){
        if( (sid!=null)&&(!sid.equals(""))){
            this._authData = this._authService.getOpertorInfoFromSid(sid);
            System.out.print(this._authData.toInfoString());
        }else{
            this._authData = (authData)session.getAttribute("authData");  
            if(this._authData==null){
                this._authData = new authData();
                this._authData.setCh_code("");
            }
            this.chCode    = this._authData.getCh_code();
            this.orgCode   = this._authData.getOrg_code();
            this.orgDp     = this._authData.getOrg_dp();
            this.chNm      = this._authData.getCh_nm();
            this.opertorId = this._authData.getOpertor_id();
            this.opertorNm = this._authData.getOpertor_nm();
            this.opertorTy = this._authData.getOpertor_ty();
        }
    } 




@RequestParam(value="sid", required=false) String sid
          