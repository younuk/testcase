<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="testcaseGroup">


    <!--  select :: 목록 -->
    <select id="select" parameterType="java.util.Map" resultType="kt.dsstestcase.vo.testcaseGroupVO">
        SELECT G.gid
             , G.group_nm
             , G.login_id
             , A.login_nm
             , G.rgsde
             , G.uinfo_1
             , G.uinfo_2
             , G.uinfo_3
             , G.uinfo_4
             , G.uinfo_5
             , G.uinfo_6
             , G.fav_genre
             , G.fav_point
             , G.status
             , G.event
             , G.uinfo
             , G.context
             , G.STB_VER
             , G.stbVersion
             , G.product_id
             , G.appID
             , G.devService_id
             , (SELECT count(*) 
                  FROM testcase 
                 WHERE gid=G.gid) as cnt
          FROM testcase_group G
             , testcase_auth A
         WHERE G.login_id = A.login_id

        <if test=" srchWord != null and srchWord != '' ">
              AND G.group_nm LIKE  CONCAT('%', #{srchWord} , '%')
        </if>
        ORDER BY G.gid
    </select>

    <select id="selectOneByGid" parameterType="java.util.Map" resultType="kt.dsstestcase.vo.testcaseGroupVO">
        SELECT G.gid
             , G.group_nm
             , G.login_id
             , A.login_nm
             , G.rgsde
             , G.uinfo_1
             , G.uinfo_2
             , G.uinfo_3
             , G.uinfo_4
             , G.uinfo_5
             , G.uinfo_6
             , G.fav_genre
             , G.fav_point
             , G.status
             , G.event
             , G.uinfo
             , G.context
             , G.STB_VER
             , G.stbVersion
             , G.product_id
             , G.appID
             , G.devService_id
             , (SELECT count(*) 
                  FROM testcase 
                 WHERE gid=G.gid) as cnt
          FROM testcase_group G
             , testcase_auth A
         WHERE G.login_id = A.login_id
           AND G.gid    = #{gid}
    </select>

    <select id="selectMaxGid" parameterType="java.util.Map" resultType="int">
        SELECT ifnull(max(gid),0) as gid
          FROM testcase_group
    </select>

    <!--  insertTestcase -->
    <insert id="insert" parameterType="kt.dsstestcase.vo.testcaseGroupVO">
        INSERT INTO  testcase_group  (
            gid,
            group_nm,
            login_id,
            rgsde,
            uinfo_1,
            uinfo_2,
            uinfo_3,
            uinfo_4,
            uinfo_5,
            uinfo_6,
            fav_genre,
            fav_point,
            status,
            event,
            uinfo,
            context,
            STB_VER,
            stbVersion,
            product_id,
            appID,
            devService_id
        )VALUES(
            #{gid},
            #{group_nm},
            #{login_id},
            now(),
            #{uinfo_1},
            #{uinfo_2},
            #{uinfo_3},
            #{uinfo_4},
            #{uinfo_5},
            #{uinfo_6},
            #{fav_genre},
            #{fav_point},
            #{status},
            #{event},
            #{uinfo},
            #{context},
            #{STB_VER},
            #{stbVersion},
            #{product_id},
            #{appID},
            #{devService_id}
        )
    </insert>

    <!--  update :: 정보 수정  -->
    <update id="update" parameterType="kt.dsstestcase.vo.testcaseGroupVO">
        UPDATE testcase_group  
           SET group_nm     = #{group_nm}
             , uinfo_1       = #{uinfo_1}
             , uinfo_2       = #{uinfo_2}
             , uinfo_3       = #{uinfo_3}
             , uinfo_4       = #{uinfo_4}
             , uinfo_5       = #{uinfo_5}
             , uinfo_6       = #{uinfo_6}
             , fav_genre     = #{fav_genre}
             , fav_point     = #{fav_point}
             , status        = #{status}
             , event         = #{event}
             , uinfo         = #{uinfo}
             , context       = #{context}
             , STB_VER       = #{STB_VER}
             , stbVersion    = #{stbVersion}
             , product_id    = #{product_id}
             , appID         = #{appID}
             , devService_id = #{devService_id}
        WHERE gid            =#{gid}
    </update>

    <!--  delete :: 삭제  -->
    <update id="delete" parameterType="java.util.Map">
        DELETE 
          FROM testcase_group
         WHERE gid=#{gid}
    </update>
</mapper>