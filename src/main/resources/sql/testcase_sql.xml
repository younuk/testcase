<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kt.dsstestcase.dao.testcaseDao">
    <!--  select :: 목록 -->
    <select id="select" resultType="testcaseVO" parameterType="ArrayList">
        SELECT *
          FROM testcase
        
        <choose>
            <when test='array != null'>
                where sn in
                <foreach item="sn" collection="array" open="(" separator="," close=")">
                    #{sn}
                </foreach>
            </when>
            <otherwise>
                WHERE exam IS NOT NULL
                    AND exam != ''
                ORDER BY service_domain
                       , ans_actType
            </otherwise>
        </choose>
    </select>

    <select id="selectOne" resultType="testcaseVO" parameterType="String">
        SELECT *
          FROM testcase
        WHERE sn = #{sn}
    </select>
    
    <!--  actTypeGroupList :: 목록 -->
    <select id="selectActTypeGroupList" resultType="actTypeVO">
        SELECT act_type_str
             , ans_actType as actType
          FROM testcase
         GROUP BY ans_actType
    </select>

    <!--  selectView :: 목록 -->
    <select id="selectView" parameterType="testcaseVO" resultType="testcaseVO">
         SELECT t.sn
              , t.gid
              , t.cat_id
              , t.service_domain
              , t.in_domain
              , t.descr
              , t.exam
              , t.service_id_str
              , t.ans_sysAct
              , t.ans_actType
              , t.ans_srchword
              , t.ans_srchopt
              , t.ans_srchqry
              , t.ans_sword
              , t.p_status
              , t.p_event
              , t.p_uinfo
              , t.p_context
              , c.nm as cat_nm
              , d.domain_name as service_domain_name
          FROM testcase t
             , testcase_service_domain d
             , testcase_category c
         WHERE t.service_domain = d.service_domain
           AND t.cat_id     = c.cat_id
           AND t.exam       IS NOT NULL
           AND t.exam       != ''
          <if test=" exam != null and exam != '' ">
                AND t.exam LIKE CONCAT('%', #{exam} , '%')
          </if>
          <if test=" gid != null and gid != '' ">
                AND t.gid = #{gid}
          </if>
          <if test=" cat_id != null and cat_id != '' ">
                AND t.cat_id = #{cat_id}
          </if>

        ORDER BY t.cat_id
               , t.service_domain
               , t.sn desc
    </select>


    <!--  insertTestcase -->
    <insert id="insert" parameterType="testcaseVO" useGeneratedKeys="true" keyProperty="sn">
        INSERT INTO  testcase  
        ( gid
        , cat_id
        , service_domain
        , in_domain
        , act_type_str
        , descr
        , exam
        , service_id_tmpl
        , service_id_ptrn
        , service_id_str
        , chk_method
        , ans_sysAct
        , ans_actType
        , ans_srchword
        , ans_srchopt
        , ans_srchqry
        , ans_sword
        , g_domain
        , service_id_example
        , service_rmk
        , p_status
        , p_event
        , p_uinfo
        , p_context
        ) VALUES(
        , #{gid}
        , #{cat_id}
        , #{service_domain}
        , #{in_domain}
        , #{act_type_str}
        , #{descr}
        , #{exam}
        , #{service_id_tmpl}
        , #{service_id_ptrn}
        , #{service_id_str}
        , #{chk_method}
        , #{ans_sysAct}
        , #{ans_actType}
        , #{ans_srchword}
        , #{ans_srchopt}
        , #{ans_srchqry}
        , #{ans_sword}
        , #{g_domain}
        , #{service_id_example}
        , #{service_rmk}
        , #{p_status}
        , #{p_event}
        , #{p_uinfo}
        , #{p_context}
        )
    </insert>

    <!--  update :: 정보 수정  -->
    <update id="update" parameterType="testcaseVO">
        UPDATE testcase
           SET gid              = #{gid}
             , cat_id            = #{cat_id}
             , service_domain    = #{service_domain}
             , in_domain         = #{in_domain}
             , act_type_str      = #{act_type_str}
             , descr             = #{descr}
             , exam              = #{exam}
             , service_id_tmpl   = #{service_id_tmpl}
             , service_id_ptrn   = #{service_id_ptrn}
             , service_id_str    = #{service_id_str}
             , chk_method        = #{chk_method}
             , ans_sysAct        = #{ans_sysAct}
             , ans_actType       = #{ans_actType}
             , ans_srchword      = #{ans_srchword}
             , ans_srchopt       = #{ans_srchopt}
             , ans_srchqry       = #{ans_srchqry}
             , ans_sword         = #{ans_sword}
             , g_domain          = #{g_domain}
             , service_id_example = #{service_id_example}
             , service_rmk       = #{service_rmk}
             , p_status          = #{p_status}
             , p_event           = #{p_event}
             , p_uinfo           = #{p_uinfo}
             , p_context         = #{p_context}
         WHERE sn = #{sn}
    </update>

    <!--  updateField :: 정보 수정  -->
    <update id="updateField" parameterType="java.util.Map">
        UPDATE testcase
           SET ${field} = #{value}
         WHERE sn = #{sn}
    </update>

    <!--  delete :: 삭제  -->
    <update id="delete" parameterType="java.util.Map">
        DELETE
          FROM testcase
         WHERE sn = #{sn}
    </update>
    
    
    <!--  select :: 목록 -->
    <select id="selectCtgr" parameterType="String" resultType="testcaseCategoryVO">
        SELECT tc.sn
             , tc.cat_id
             , tc.gid
             , tc.ord
             , tc.dept
             , tc.pnm
             , tc.nm
             , IFNULL(tc_cnt, 0) AS tc_cnt
          FROM testcase_category tc
    LEFT OUTER JOIN (SELECT cat_id, COUNT(*) AS tc_cnt
                       FROM testcase
                      WHERE IFNULL(exam, '') != ''
                      GROUP BY cat_id) cnt
                 ON tc.cat_id = cnt.cat_id
          <if test=' gid != null and gid != "" '>
            WHERE gid = #{gid}
          </if>
         ORDER BY gid, ord, dept
    </select>
    
    <!--  selectMapping :: 목록 -->
    <select id="selectCtgrMapping" parameterType="String" resultType="java.util.Map">
        SELECT tc.pnm
             , tc.nm
             , t.sn
             , t.gid
             , t.cat_id
             , t.exam
             , '' regist_id
             , '' regist_dt
             , ans_actType
          FROM testcase t
    LEFT OUTER JOIN testcase_category tc
                 ON t.cat_id = tc.cat_id
         
         <if test=' gid != null and gid != "" '>
           WHERE t.gid = #{gid}
         </if>
    </select>

</mapper>